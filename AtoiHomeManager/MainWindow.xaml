<Controls:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"                       
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:AtoiHomeManager"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:uc="clr-namespace:AtoiHomeManager.Source.View"
    mc:Ignorable="d"  
    x:Class="AtoiHomeManager.MainWindow"
    Title="AtoiHomeManager" Height="1080" Width="900" 
    BorderThickness="0" 
    Closing="Window_Closing" 
    WindowStartupLocation="Manual" 
    Topmost="True"
    Left="2000" Top="0"
    Loaded="Window_Loaded" 
    ResizeMode="CanResizeWithGrip" 
    ShowInTaskbar="True"
    TitleCharacterCasing="Normal"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">
<!--Loaded_event rout to ViewModel-->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Controls:MetroWindow.Resources>
        <ResourceDictionary>
            <!--Button Style-->
            <Button x:Key="MainButton"/>
            <Style TargetType="{x:Type Button}">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Width" Value="90" />
                <Setter Property="Height" Value="90" />
                <Setter Property="Foreground"  Value="Black"/>
                <Setter Property="Background"  Value="White"/>
            </Style>
            <Image x:Key="ScrollView" Source="pack://application:,,,/atoihomemanager;component/Resources/Images/scrollview24.png" Width="30" Height="30"/>
            <Image x:Key="ZoomView" Source="pack://application:,,,/atoihomemanager;component/Resources/Images/zoomview24.png" Width="30" Height="30"/>
        </ResourceDictionary>
    </Controls:MetroWindow.Resources>


    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Content="settings" Command ="{Binding ShowSettingDialogCommand}" CommandParameter="{Binding}"/>
            <Button>
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20"
                   Height="20"
                   Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_cupcake}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0"
                   VerticalAlignment="Center"
                   Text="deploy cupcakes" />
                </StackPanel>
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <Grid x:Name="gridMain">
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="Black" Offset="0"/>
                <GradientStop Color="White" Offset="1"/>
            </LinearGradientBrush>
        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="1" Margin="0, 5, 0, 0">
            <Button Content="{Binding}" Command="{Binding ServiceControlCommand}" IsEnabled="{Binding IsEnabledServiceControl}">
                <Button.ContentTemplate>
                    <DataTemplate DataType="{x:Type local:MainWindowViewModel}">
                        <StackPanel Orientation="Vertical">
                            <Image Width="30" Height="30" >
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ServiceStatus}" Value="true">
                                                <Setter Property="Source" Value="/Resources/Images/StartedService.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ServiceStatus}" Value="false">
                                                <Setter Property="Source" Value="/Resources/Images/StopedService.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="{Binding ServiceStatusString}">
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>

            <Button x:Name="buttonDrawImage" ToolTip="Draw selected image"  
                    Command="{Binding DrawImageCommand}">
                <StackPanel>
                    <Rectangle Width="30" Height="30" 
                         Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_image}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock>Select Image</TextBlock>
                </StackPanel>
            </Button>

            <Button x:Name="buttonImageRotation" ToolTip="Rotate image" Command="{Binding RotateImageCommand}">
                <StackPanel>
                    <Rectangle Width="30" Height="30" 
                         Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_transform_rotate_clockwise}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock>Rotate Image</TextBlock>
                </StackPanel>
            </Button>

            <Button Content="{Binding}" Command="{Binding DrawModeCommand}">
                <Button.ContentTemplate>
                    <DataTemplate DataType="{x:Type local:MainWindowViewModel}">
                        <StackPanel Orientation="Vertical">
                            <Image Width="30" Height="30" >
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding bScrollViewMode}" Value="true">
                                                <Setter Property="Source" Value="/Resources/Images/scrollview24.png"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding bScrollViewMode}" Value="false">
                                                <Setter Property="Source" Value="/Resources/Images/zoomview24.png"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="{Binding ViewModeName}">
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
        </StackPanel>
        <!--user control과 viewmodel사이의 바인딩을 처리기하기위해 user control의 내부
        DP(dependency property)를 외부에서 설정할 수 있게 처리하고 아래와 같이
        외부에서 뷰모델의 DP를 연결시킨다.-->
        <uc:ZoomImageView 
            LocalImagePath ="{Binding ImagePath}"
            LocalRotateAngle="{Binding RotateAngle}"
            LocalViewMode="{Binding bScrollViewMode}"
            HorizontalAlignment="Center" Grid.Column="2" Margin="5,5,5,5"/>
    </Grid>

</Controls:MetroWindow>

